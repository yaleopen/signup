---
grails:
    profile: react-webpack
    codegen:
        defaultPackage: signup.tool
    spring:
        transactionManagement:
            proxies: false
    gorm:
        # Whether to autowire entities.
        # Disabled by default for performance reasons.
        autowire: false
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
    mail:
        host: '${MAIL_HOST}'
        port: 25
        overrideAddress:
        disabled: false
        smtp:
            connectiontimeout: 5000
            timeout: 3000
            writetimeout: 5000
        default:
            from: '${MAIL_FROM_ADDRESS}'
            replyTo: '${MAIL_REPLYTO_ADDRESS}'
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

server:
    contextPath: /signup

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 52428800
            maxRequestSize: 52428800
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

quartz:
    autoStartup: true
    jdbcStore: true
    waitForJobsToCompleteOnShutdown: true

    scheduler:
        instanceName: 'SignUpScheduler'
        instanceId: 'AUTO'
        skipUpdateCheck: true        # get rid of annoying message on startup

    threadPool.class: 'org.quartz.simpl.SimpleThreadPool'
    threadPool:
        threadCount: 5               # Quartz max threads (jobs) at the same time
        threadPriority: 5            # Thread.MIN_PRIORITY level

    # handles its own transactions with the database
    jobStore.class: 'org.quartz.impl.jdbcjobstore.JobStoreTX'
    jobStore:
        misfireThreshold: 60000
        driverDelegateClass: 'org.quartz.impl.jdbcjobstore.StdJDBCDelegate'
        useProperties: false         # Properties passed to the job are NOT all String objects
        tablePrefix: 'QRTZ_'         # Prefix for the Quartz tables in the database
        isClustered: true            # Tell Quartz it is clustered
        clusterCheckinInterval: 5000 # Check in with the cluster every 5000 ms

    # Detect the jvm shutdown and call shutdown on the scheduler
    plugin:
      shutdownhook.cleanShutdown: true
      shutdownhook.class: 'org.quartz.plugins.management.ShutdownHookPlugin'

    # Log the history of triggers and jobs
    triggerHistory.class: 'org.quartz.plugins.history.LoggingTriggerHistoryPlugin'
    jobHistory.class: 'org.quartz.plugins.history.LoggingJobHistoryPlugin'

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false

dataSources:
    dataSource:
        pooled: true
        driverClassName: com.mysql.jdbc.Driver
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

canvas:
    #Canvas Admin Access Token
    oauthToken: '${CANVAS_API_TOKEN}'
    #Base URL ex. https://<school>.instructure.com
    canvasBaseUrl: '${CANVAS_BASE_URL}'
    #Shared Secret used during LTI Install
    ltiSecret: '${SIGNUP_LTI_SECRET}'
    #Comma Delimited List of Canvas Role IDs that can manage Calendars
    #Viewable at Admin -> Permissions -> Course Calendar
    manageCalendarRoles: '${SIGNUP_CALENDAR_ROLE_IDS}'
    #Namespace used for storing custom user data via Users API
    customDataNS: '${CANVAS_API_CUSTOM_NS}'

environments:
    development:
        dataSources:
            dataSource:
                dbCreate: update
                username: '${DB_USERNAME}'
                password: '${DB_PASSWORD}'
                url: '${DB_URL}'